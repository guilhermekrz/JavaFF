/* Generated By:JavaCC: Do not edit this line. PDDL30parserTokenManager.java */
package javaff.parser.parser30;
import javaff.data.*;
import javaff.data.strips.*;
import javaff.data.metric.*;
import javaff.data.temporal.*;
import javaff.data.adl.*;
import javaff.data.DomainRequirements;
import javaff.data.preference.*;
import java.io.File;
import java.io.FileReader;
import java.io.FileNotFoundException;
import java.io.IOException;
import java.util.List;
import java.util.ArrayList;
import java.util.Map;
import java.util.Hashtable;
import java.util.Set;
import java.util.HashSet;
import java.util.Iterator;
import java.math.BigDecimal;

/** Token Manager. */
public class PDDL30parserTokenManager implements PDDL30parserConstants
{

  /** Debug output. */
  public  java.io.PrintStream debugStream = System.out;
  /** Set debug output. */
  public  void setDebugStream(java.io.PrintStream ds) { debugStream = ds; }
private final int jjStopStringLiteralDfa_0(int pos, long active0, long active1)
{
   switch (pos)
   {
      case 0:
         if ((active0 & 0x40000000L) != 0L)
            return 73;
         if ((active0 & 0x800000000000L) != 0L)
            return 77;
         if ((active0 & 0x180L) != 0L)
         {
            jjmatchedKind = 65;
            return 70;
         }
         if ((active0 & 0x1900000000000000L) != 0L)
         {
            jjmatchedKind = 65;
            return 104;
         }
         if ((active0 & 0xc230396000424000L) != 0L)
         {
            jjmatchedKind = 65;
            return 77;
         }
         if ((active0 & 0x7bfa1be00L) != 0L)
            return 119;
         if ((active0 & 0x2480061800000000L) != 0L)
         {
            jjmatchedKind = 65;
            return 55;
         }
         if ((active0 & 0x8000000000L) != 0L)
         {
            jjmatchedKind = 65;
            return 63;
         }
         return -1;
      case 1:
         if ((active0 & 0x2000000000L) != 0L)
            return 77;
         if ((active0 & 0xffb03fd800424100L) != 0L)
         {
            jjmatchedKind = 65;
            jjmatchedPos = 1;
            return 77;
         }
         if ((active0 & 0x28000200L) != 0L)
            return 152;
         if ((active0 & 0x40000000L) != 0L)
         {
            jjmatchedKind = 54;
            jjmatchedPos = 1;
            return 73;
         }
         if ((active0 & 0x91000000L) != 0L)
            return 318;
         if ((active0 & 0x2000000L) != 0L)
            return 137;
         if ((active0 & 0x200000L) != 0L)
            return 118;
         if ((active0 & 0x400L) != 0L)
            return 464;
         if ((active0 & 0x80L) != 0L)
         {
            jjmatchedKind = 65;
            jjmatchedPos = 1;
            return 69;
         }
         if ((active0 & 0x200000000L) != 0L)
            return 131;
         if ((active0 & 0x4000000L) != 0L)
            return 197;
         if ((active0 & 0x100810000L) != 0L)
            return 287;
         return -1;
      case 2:
         if ((active0 & 0x40000000L) != 0L)
         {
            jjmatchedKind = 54;
            jjmatchedPos = 2;
            return 73;
         }
         if ((active0 & 0x100810000L) != 0L)
            return 286;
         if ((active0 & 0x5000000000L) != 0L)
            return 77;
         if ((active0 & 0x28000000L) != 0L)
            return 151;
         if ((active0 & 0x200000L) != 0L)
            return 117;
         if ((active0 & 0x81000000L) != 0L)
            return 317;
         if ((active0 & 0x4000000L) != 0L)
            return 196;
         if ((active0 & 0x200L) != 0L)
            return 330;
         if ((active0 & 0xffb0398000424180L) != 0L)
         {
            jjmatchedKind = 65;
            jjmatchedPos = 2;
            return 77;
         }
         if ((active0 & 0x60800000000L) != 0L)
         {
            if (jjmatchedPos < 1)
            {
               jjmatchedKind = 65;
               jjmatchedPos = 1;
            }
            return -1;
         }
         return -1;
      case 3:
         if ((active0 & 0x100810000L) != 0L)
            return 285;
         if ((active0 & 0x200000000000L) != 0L)
            return 77;
         if ((active0 & 0x4000000L) != 0L)
            return 195;
         if ((active0 & 0x200000L) != 0L)
            return 116;
         if ((active0 & 0xffb0198000424180L) != 0L)
         {
            jjmatchedKind = 65;
            jjmatchedPos = 3;
            return 77;
         }
         if ((active0 & 0x81000000L) != 0L)
            return 316;
         if ((active0 & 0x200L) != 0L)
            return 329;
         if ((active0 & 0x28000000L) != 0L)
            return 150;
         if ((active0 & 0x60800000000L) != 0L)
         {
            if (jjmatchedPos < 1)
            {
               jjmatchedKind = 65;
               jjmatchedPos = 1;
            }
            return -1;
         }
         if ((active0 & 0x40000000L) != 0L)
         {
            jjmatchedKind = 54;
            jjmatchedPos = 3;
            return 73;
         }
         return -1;
      case 4:
         if ((active0 & 0x8000000000L) != 0L)
            return 77;
         if ((active0 & 0x100000000L) != 0L)
            return 284;
         if ((active0 & 0xffb0180000424180L) != 0L)
         {
            jjmatchedKind = 65;
            jjmatchedPos = 4;
            return 77;
         }
         if ((active0 & 0x10000000000L) != 0L)
         {
            if (jjmatchedPos < 3)
            {
               jjmatchedKind = 65;
               jjmatchedPos = 3;
            }
            return -1;
         }
         if ((active0 & 0x40000000L) != 0L)
         {
            jjmatchedKind = 54;
            jjmatchedPos = 4;
            return 73;
         }
         if ((active0 & 0x28000000L) != 0L)
            return 149;
         if ((active0 & 0x200L) != 0L)
            return 328;
         if ((active0 & 0x60800000000L) != 0L)
         {
            if (jjmatchedPos < 1)
            {
               jjmatchedKind = 65;
               jjmatchedPos = 1;
            }
            return -1;
         }
         if ((active0 & 0x4000000L) != 0L)
            return 194;
         return -1;
      case 5:
         if ((active0 & 0x22a0180000400180L) != 0L)
            return 77;
         if ((active0 & 0x100000000L) != 0L)
            return 283;
         if ((active0 & 0x28000000L) != 0L)
            return 148;
         if ((active0 & 0x40000000L) != 0L)
         {
            if (jjmatchedPos != 5)
            {
               jjmatchedKind = 54;
               jjmatchedPos = 5;
            }
            return 73;
         }
         if ((active0 & 0x10000000000L) != 0L)
         {
            if (jjmatchedPos < 3)
            {
               jjmatchedKind = 65;
               jjmatchedPos = 3;
            }
            return -1;
         }
         if ((active0 & 0x4000000L) != 0L)
            return 193;
         if ((active0 & 0x200L) != 0L)
            return 327;
         if ((active0 & 0x60800000000L) != 0L)
         {
            if (jjmatchedPos < 1)
            {
               jjmatchedKind = 65;
               jjmatchedPos = 1;
            }
            return -1;
         }
         if ((active0 & 0xdd10000000024000L) != 0L)
         {
            if (jjmatchedPos != 5)
            {
               jjmatchedKind = 65;
               jjmatchedPos = 5;
            }
            return 77;
         }
         return -1;
      case 6:
         if ((active0 & 0x40000000L) != 0L)
         {
            jjmatchedKind = 54;
            jjmatchedPos = 6;
            return 73;
         }
         if ((active0 & 0x4000L) != 0L)
            return 77;
         if ((active0 & 0x4000000L) != 0L)
            return 192;
         if ((active0 & 0x100000000L) != 0L)
            return 282;
         if ((active0 & 0x10000000000L) != 0L)
         {
            if (jjmatchedPos < 3)
            {
               jjmatchedKind = 65;
               jjmatchedPos = 3;
            }
            return -1;
         }
         if ((active0 & 0x200L) != 0L)
            return 326;
         if ((active0 & 0xfd10000000020000L) != 0L)
         {
            jjmatchedKind = 65;
            jjmatchedPos = 6;
            return 77;
         }
         if ((active0 & 0x20800000000L) != 0L)
         {
            if (jjmatchedPos < 1)
            {
               jjmatchedKind = 65;
               jjmatchedPos = 1;
            }
            return -1;
         }
         if ((active0 & 0x28000000L) != 0L)
            return 147;
         return -1;
      case 7:
         if ((active0 & 0x20000000L) != 0L)
            return 166;
         if ((active0 & 0x10000000000L) != 0L)
         {
            if (jjmatchedPos < 3)
            {
               jjmatchedKind = 65;
               jjmatchedPos = 3;
            }
            return -1;
         }
         if ((active0 & 0x8000000L) != 0L)
            return 146;
         if ((active0 & 0x1900000000000000L) != 0L)
            return 77;
         if ((active0 & 0x20800000000L) != 0L)
         {
            if (jjmatchedPos < 1)
            {
               jjmatchedKind = 65;
               jjmatchedPos = 1;
            }
            return -1;
         }
         if ((active0 & 0x100000000L) != 0L)
            return 281;
         if ((active0 & 0xe410000000020000L) != 0L)
         {
            if (jjmatchedPos != 7)
            {
               jjmatchedKind = 65;
               jjmatchedPos = 7;
            }
            return 77;
         }
         if ((active0 & 0x40000000L) != 0L)
         {
            if (jjmatchedPos != 7)
            {
               jjmatchedKind = 54;
               jjmatchedPos = 7;
            }
            return 73;
         }
         return -1;
      case 8:
         if ((active0 & 0x40000000L) != 0L)
            return 73;
         if ((active0 & 0x800000000L) != 0L)
         {
            if (jjmatchedPos < 1)
            {
               jjmatchedKind = 65;
               jjmatchedPos = 1;
            }
            return -1;
         }
         if ((active0 & 0x20000000L) != 0L)
            return 165;
         if ((active0 & 0x8000000L) != 0L)
            return 145;
         if ((active0 & 0x100000000L) != 0L)
            return 280;
         if ((active0 & 0xfc10000000020000L) != 0L)
         {
            jjmatchedKind = 65;
            jjmatchedPos = 8;
            return 77;
         }
         return -1;
      case 9:
         if ((active0 & 0x8000000L) != 0L)
            return 144;
         if ((active0 & 0x7c00000000000000L) != 0L)
         {
            jjmatchedKind = 65;
            jjmatchedPos = 9;
            return 77;
         }
         if ((active0 & 0x800000000L) != 0L)
         {
            if (jjmatchedPos < 1)
            {
               jjmatchedKind = 65;
               jjmatchedPos = 1;
            }
            return -1;
         }
         if ((active0 & 0x8010000000020000L) != 0L)
            return 77;
         if ((active0 & 0x100000000L) != 0L)
            return 279;
         return -1;
      case 10:
         if ((active0 & 0x3c00000000000000L) != 0L)
         {
            jjmatchedKind = 65;
            jjmatchedPos = 10;
            return 77;
         }
         if ((active0 & 0x4000000000000000L) != 0L)
            return 77;
         if ((active0 & 0x800000000L) != 0L)
         {
            if (jjmatchedPos < 1)
            {
               jjmatchedKind = 65;
               jjmatchedPos = 1;
            }
            return -1;
         }
         if ((active0 & 0x8000000L) != 0L)
            return 143;
         return -1;
      case 11:
         if ((active0 & 0x8000000L) != 0L)
            return 142;
         if ((active0 & 0x3800000000000000L) != 0L)
         {
            jjmatchedKind = 65;
            jjmatchedPos = 11;
            return 77;
         }
         if ((active0 & 0x400000000000000L) != 0L)
            return 77;
         return -1;
      case 12:
         if ((active0 & 0x2000000000000000L) != 0L)
            return 77;
         if ((active0 & 0x8000000L) != 0L)
            return 141;
         if ((active0 & 0x1800000000000000L) != 0L)
         {
            jjmatchedKind = 65;
            jjmatchedPos = 12;
            return 77;
         }
         return -1;
      case 13:
         if ((active0 & 0x800000000000000L) != 0L)
            return 77;
         if ((active0 & 0x1000000000000000L) != 0L)
         {
            jjmatchedKind = 65;
            jjmatchedPos = 13;
            return 77;
         }
         if ((active0 & 0x8000000L) != 0L)
            return 140;
         return -1;
      case 14:
         if ((active0 & 0x1000000000000000L) != 0L)
            return 77;
         if ((active0 & 0x8000000L) != 0L)
            return 139;
         return -1;
      default :
         return -1;
   }
}
private final int jjStartNfa_0(int pos, long active0, long active1)
{
   return jjMoveNfa_0(jjStopStringLiteralDfa_0(pos, active0, active1), pos + 1);
}
private int jjStopAtPos(int pos, int kind)
{
   jjmatchedKind = kind;
   jjmatchedPos = pos;
   return pos + 1;
}
private int jjMoveStringLiteralDfa0_0()
{
   switch(curChar)
   {
      case 40:
         return jjStopAtPos(0, 5);
      case 41:
         return jjStopAtPos(0, 6);
      case 45:
         return jjStartNfaWithStates_0(0, 47, 77);
      case 58:
         return jjMoveStringLiteralDfa1_0(0x7bfa1be00L);
      case 61:
         return jjStopAtPos(0, 46);
      case 63:
         return jjMoveStringLiteralDfa1_0(0x40000000L);
      case 65:
      case 97:
         return jjMoveStringLiteralDfa1_0(0x2480061800000000L);
      case 68:
      case 100:
         return jjMoveStringLiteralDfa1_0(0x180L);
      case 69:
      case 101:
         return jjMoveStringLiteralDfa1_0(0x100000400000L);
      case 70:
      case 102:
         return jjMoveStringLiteralDfa1_0(0x80000000000L);
      case 72:
      case 104:
         return jjMoveStringLiteralDfa1_0(0xc000000000000000L);
      case 73:
      case 105:
         return jjMoveStringLiteralDfa1_0(0x8000000000L);
      case 78:
      case 110:
         return jjMoveStringLiteralDfa1_0(0x20004000000000L);
      case 79:
      case 111:
         return jjMoveStringLiteralDfa1_0(0x12000000000L);
      case 80:
      case 112:
         return jjMoveStringLiteralDfa1_0(0x24000L);
      case 83:
      case 115:
         return jjMoveStringLiteralDfa1_0(0x1900000000000000L);
      case 84:
      case 116:
         return jjMoveStringLiteralDfa1_0(0x10000000000000L);
      case 87:
      case 119:
         return jjMoveStringLiteralDfa1_0(0x200200000000000L);
      default :
         return jjMoveNfa_0(22, 0);
   }
}
private int jjMoveStringLiteralDfa1_0(long active0)
{
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_0(0, active0, 0L);
      return 1;
   }
   switch(curChar)
   {
      case 32:
         return jjMoveStringLiteralDfa2_0(active0, 0x400000000L);
      case 65:
      case 97:
         return jjMoveStringLiteralDfa2_0(active0, 0x4000000L);
      case 67:
      case 99:
         return jjMoveStringLiteralDfa2_0(active0, 0x100810000L);
      case 68:
      case 100:
         return jjMoveStringLiteralDfa2_0(active0, 0x68000200L);
      case 69:
      case 101:
         return jjMoveStringLiteralDfa2_0(active0, 0x200000080L);
      case 70:
      case 102:
         return jjMoveStringLiteralDfa2_0(active0, 0x2000000L);
      case 71:
      case 103:
         return jjMoveStringLiteralDfa2_0(active0, 0x800L);
      case 72:
      case 104:
         return jjMoveStringLiteralDfa2_0(active0, 0x200000000000L);
      case 73:
      case 105:
         return jjMoveStringLiteralDfa2_0(active0, 0x200000000401000L);
      case 76:
      case 108:
         return jjMoveStringLiteralDfa2_0(active0, 0x2080000000000000L);
      case 77:
      case 109:
         return jjMoveStringLiteralDfa2_0(active0, 0x8000002000L);
      case 78:
      case 110:
         return jjMoveStringLiteralDfa2_0(active0, 0x1000000000L);
      case 79:
      case 111:
         return jjMoveStringLiteralDfa2_0(active0, 0xd910084000000500L);
      case 80:
      case 112:
         return jjMoveStringLiteralDfa2_0(active0, 0x91000000L);
      case 82:
      case 114:
         if ((active0 & 0x2000000000L) != 0L)
            return jjStartNfaWithStates_0(1, 37, 77);
         return jjMoveStringLiteralDfa2_0(active0, 0x2c000L);
      case 84:
      case 116:
         return jjMoveStringLiteralDfa2_0(active0, 0x400060800200000L);
      case 85:
      case 117:
         return jjMoveStringLiteralDfa2_0(active0, 0x20000000000000L);
      case 86:
      case 118:
         return jjMoveStringLiteralDfa2_0(active0, 0x10000000000L);
      case 88:
      case 120:
         return jjMoveStringLiteralDfa2_0(active0, 0x100000000000L);
      default :
         break;
   }
   return jjStartNfa_0(0, active0, 0L);
}
private int jjMoveStringLiteralDfa2_0(long old0, long active0)
{
   if (((active0 &= old0)) == 0L)
      return jjStartNfa_0(0, old0, 0L);
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_0(1, active0, 0L);
      return 2;
   }
   switch(curChar)
   {
      case 32:
         return jjMoveStringLiteralDfa3_0(active0, 0x60800000000L);
      case 45:
         return jjMoveStringLiteralDfa3_0(active0, 0x400000000000000L);
      case 65:
      case 97:
         return jjMoveStringLiteralDfa3_0(active0, 0x410000000L);
      case 66:
      case 98:
         return jjMoveStringLiteralDfa3_0(active0, 0x400L);
      case 67:
      case 99:
         return jjMoveStringLiteralDfa3_0(active0, 0x4000000L);
      case 68:
      case 100:
         if ((active0 & 0x1000000000L) != 0L)
            return jjStartNfaWithStates_0(2, 36, 77);
         break;
      case 69:
      case 101:
         return jjMoveStringLiteralDfa3_0(active0, 0x21000002a000L);
      case 70:
      case 102:
         return jjMoveStringLiteralDfa3_0(active0, 0x200000080L);
      case 73:
      case 105:
         return jjMoveStringLiteralDfa3_0(active0, 0x100000000000L);
      case 76:
      case 108:
         return jjMoveStringLiteralDfa3_0(active0, 0xc000000000000000L);
      case 77:
      case 109:
         return jjMoveStringLiteralDfa3_0(active0, 0x1920000000000100L);
      case 78:
      case 110:
         return jjMoveStringLiteralDfa3_0(active0, 0x1000L);
      case 79:
      case 111:
         return jjMoveStringLiteralDfa3_0(active0, 0x100814a00L);
      case 80:
      case 112:
         return jjMoveStringLiteralDfa3_0(active0, 0x8000000000L);
      case 82:
      case 114:
         return jjMoveStringLiteralDfa3_0(active0, 0x80081000000L);
      case 84:
      case 116:
         if ((active0 & 0x4000000000L) != 0L)
            return jjStartNfaWithStates_0(2, 38, 77);
         return jjMoveStringLiteralDfa3_0(active0, 0x210000000400000L);
      case 85:
      case 117:
         return jjMoveStringLiteralDfa3_0(active0, 0x6a000000L);
      case 87:
      case 119:
         return jjMoveStringLiteralDfa3_0(active0, 0x2080000000000000L);
      case 89:
      case 121:
         return jjMoveStringLiteralDfa3_0(active0, 0x200000L);
      default :
         break;
   }
   return jjStartNfa_0(1, active0, 0L);
}
private int jjMoveStringLiteralDfa3_0(long old0, long active0)
{
   if (((active0 &= old0)) == 0L)
      return jjStartNfa_0(1, old0, 0L);
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_0(2, active0, 0L);
      return 3;
   }
   switch(curChar)
   {
      case 60:
         return jjMoveStringLiteralDfa4_0(active0, 0x800000000L);
      case 65:
      case 97:
         return jjMoveStringLiteralDfa4_0(active0, 0x2090080000000900L);
      case 66:
      case 98:
         return jjMoveStringLiteralDfa4_0(active0, 0x20000000004000L);
      case 68:
      case 100:
         return jjMoveStringLiteralDfa4_0(active0, 0xc000000000000000L);
      case 69:
      case 101:
         return jjMoveStringLiteralDfa4_0(active0, 0x1900040081000000L);
      case 70:
      case 102:
         return jjMoveStringLiteralDfa4_0(active0, 0x200020000L);
      case 72:
      case 104:
         return jjMoveStringLiteralDfa4_0(active0, 0x200000000400000L);
      case 73:
      case 105:
         return jjMoveStringLiteralDfa4_0(active0, 0x1080L);
      case 74:
      case 106:
         return jjMoveStringLiteralDfa4_0(active0, 0x400L);
      case 76:
      case 108:
         return jjMoveStringLiteralDfa4_0(active0, 0x8000000000L);
      case 77:
      case 109:
         return jjMoveStringLiteralDfa4_0(active0, 0x400000000000200L);
      case 78:
      case 110:
         if ((active0 & 0x200000000000L) != 0L)
            return jjStartNfaWithStates_0(3, 45, 77);
         return jjMoveStringLiteralDfa4_0(active0, 0x102810000L);
      case 80:
      case 112:
         return jjMoveStringLiteralDfa4_0(active0, 0x200000L);
      case 81:
      case 113:
         return jjMoveStringLiteralDfa4_0(active0, 0x8000L);
      case 82:
      case 114:
         return jjMoveStringLiteralDfa4_0(active0, 0x10078000000L);
      case 83:
      case 115:
         return jjMoveStringLiteralDfa4_0(active0, 0x120000000000L);
      case 84:
      case 116:
         if ((active0 & 0x400000000L) != 0L)
            return jjStopAtPos(3, 34);
         return jjMoveStringLiteralDfa4_0(active0, 0x4002000L);
      default :
         break;
   }
   return jjStartNfa_0(2, active0, 0L);
}
private int jjMoveStringLiteralDfa4_0(long old0, long active0)
{
   if (((active0 &= old0)) == 0L)
      return jjStartNfa_0(2, old0, 0L);
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_0(3, active0, 0L);
      return 4;
   }
   switch(curChar)
   {
      case 32:
         return jjMoveStringLiteralDfa5_0(active0, 0x10000000000L);
      case 45:
         return jjMoveStringLiteralDfa5_0(active0, 0xc000000000000000L);
      case 65:
      case 97:
         return jjMoveStringLiteralDfa5_0(active0, 0x78000200L);
      case 67:
      case 99:
         return jjMoveStringLiteralDfa5_0(active0, 0x82000000L);
      case 68:
      case 100:
         return jjMoveStringLiteralDfa5_0(active0, 0x101000000L);
      case 69:
      case 101:
         return jjMoveStringLiteralDfa5_0(active0, 0x20000200620400L);
      case 73:
      case 105:
         return jjMoveStringLiteralDfa5_0(active0, 0x200000004000100L);
      case 76:
      case 108:
         if ((active0 & 0x800L) != 0L)
            return jjStopAtPos(4, 11);
         return jjMoveStringLiteralDfa5_0(active0, 0x10080000004000L);
      case 78:
      case 110:
         return jjMoveStringLiteralDfa5_0(active0, 0x40800000080L);
      case 79:
      case 111:
         return jjMoveStringLiteralDfa5_0(active0, 0x400000000000000L);
      case 82:
      case 114:
         return jjMoveStringLiteralDfa5_0(active0, 0x2000L);
      case 83:
      case 115:
         return jjMoveStringLiteralDfa5_0(active0, 0x810000L);
      case 84:
      case 116:
         if ((active0 & 0x1000L) != 0L)
            return jjStopAtPos(4, 12);
         return jjMoveStringLiteralDfa5_0(active0, 0x1900120000000000L);
      case 85:
      case 117:
         return jjMoveStringLiteralDfa5_0(active0, 0x8000L);
      case 89:
      case 121:
         if ((active0 & 0x8000000000L) != 0L)
            return jjStartNfaWithStates_0(4, 39, 77);
         return jjMoveStringLiteralDfa5_0(active0, 0x2080000000000000L);
      default :
         break;
   }
   return jjStartNfa_0(3, active0, 0L);
}
private int jjMoveStringLiteralDfa5_0(long old0, long active0)
{
   if (((active0 &= old0)) == 0L)
      return jjStartNfa_0(3, old0, 0L);
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_0(4, active0, 0L);
      return 5;
   }
   switch(curChar)
   {
      case 45:
         return jjMoveStringLiteralDfa6_0(active0, 0x10000000000000L);
      case 65:
      case 97:
         return jjMoveStringLiteralDfa6_0(active0, 0x8000030000000000L);
      case 67:
      case 99:
         return jjMoveStringLiteralDfa6_0(active0, 0x200000400L);
      case 68:
      case 100:
         if ((active0 & 0x40000000000L) != 0L)
            return jjStopAtPos(5, 42);
         return jjMoveStringLiteralDfa6_0(active0, 0x4000000000000000L);
      case 69:
      case 101:
         if ((active0 & 0x80L) != 0L)
            return jjStartNfaWithStates_0(5, 7, 77);
         return jjMoveStringLiteralDfa6_0(active0, 0x4000L);
      case 73:
      case 105:
         return jjMoveStringLiteralDfa6_0(active0, 0x190000010100a200L);
      case 76:
      case 108:
         if ((active0 & 0x80000000000L) != 0L)
            return jjStartNfaWithStates_0(5, 43, 77);
         break;
      case 77:
      case 109:
         return jjMoveStringLiteralDfa6_0(active0, 0x10000000L);
      case 78:
      case 110:
         if ((active0 & 0x100L) != 0L)
            return jjStartNfaWithStates_0(5, 8, 77);
         else if ((active0 & 0x200000000000000L) != 0L)
            return jjStartNfaWithStates_0(5, 57, 77);
         break;
      case 79:
      case 111:
         return jjMoveStringLiteralDfa6_0(active0, 0x84000000L);
      case 82:
      case 114:
         if ((active0 & 0x400000L) != 0L)
            return jjStartNfaWithStates_0(5, 22, 77);
         else if ((active0 & 0x20000000000000L) != 0L)
            return jjStartNfaWithStates_0(5, 53, 77);
         return jjMoveStringLiteralDfa6_0(active0, 0x20000L);
      case 83:
      case 115:
         if ((active0 & 0x200000L) != 0L)
            return jjStopAtPos(5, 21);
         else if ((active0 & 0x100000000000L) != 0L)
            return jjStartNfaWithStates_0(5, 44, 77);
         else if ((active0 & 0x80000000000000L) != 0L)
         {
            jjmatchedKind = 55;
            jjmatchedPos = 5;
         }
         return jjMoveStringLiteralDfa6_0(active0, 0x2400000000000000L);
      case 84:
      case 116:
         return jjMoveStringLiteralDfa6_0(active0, 0x6a810000L);
      case 85:
      case 117:
         return jjMoveStringLiteralDfa6_0(active0, 0x800000000L);
      default :
         break;
   }
   return jjStartNfa_0(4, active0, 0L);
}
private int jjMoveStringLiteralDfa6_0(long old0, long active0)
{
   if (((active0 &= old0)) == 0L)
      return jjStartNfa_0(4, old0, 0L);
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_0(5, active0, 0L);
      return 6;
   }
   switch(curChar)
   {
      case 45:
         return jjMoveStringLiteralDfa7_0(active0, 0x2000000000000000L);
      case 65:
      case 97:
         return jjMoveStringLiteralDfa7_0(active0, 0x800000L);
      case 67:
      case 99:
         if ((active0 & 0x2000L) != 0L)
            return jjStopAtPos(6, 13);
         return jjMoveStringLiteralDfa7_0(active0, 0x1000000L);
      case 69:
      case 101:
         return jjMoveStringLiteralDfa7_0(active0, 0x10020000L);
      case 70:
      case 102:
         return jjMoveStringLiteralDfa7_0(active0, 0x8000000000000000L);
      case 73:
      case 105:
         return jjMoveStringLiteralDfa7_0(active0, 0x6a000000L);
      case 76:
      case 108:
         return jjMoveStringLiteralDfa7_0(active0, 0x10000000000L);
      case 77:
      case 109:
         if ((active0 & 0x4000L) != 0L)
            return jjStartNfaWithStates_0(6, 14, 77);
         return jjMoveStringLiteralDfa7_0(active0, 0x1900000800000000L);
      case 78:
      case 110:
         if ((active0 & 0x200L) != 0L)
            return jjStartNfaWithStates_0(6, 9, 326);
         else if ((active0 & 0x4000000L) != 0L)
            return jjStartNfaWithStates_0(6, 26, 192);
         return jjMoveStringLiteralDfa7_0(active0, 0x80000000L);
      case 82:
      case 114:
         return jjMoveStringLiteralDfa7_0(active0, 0x20000018000L);
      case 84:
      case 116:
         if ((active0 & 0x200000000L) != 0L)
            return jjStopAtPos(6, 33);
         return jjMoveStringLiteralDfa7_0(active0, 0x410000100000400L);
      case 85:
      case 117:
         return jjMoveStringLiteralDfa7_0(active0, 0x4000000000000000L);
      default :
         break;
   }
   return jjStartNfa_0(5, active0, 0L);
}
private int jjMoveStringLiteralDfa7_0(long old0, long active0)
{
   if (((active0 &= old0)) == 0L)
      return jjStartNfa_0(5, old0, 0L);
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_0(6, active0, 0L);
      return 7;
   }
   switch(curChar)
   {
      case 45:
         return jjMoveStringLiteralDfa8_0(active0, 0x400000000000000L);
      case 65:
      case 97:
         return jjMoveStringLiteralDfa8_0(active0, 0x1010000L);
      case 66:
      case 98:
         return jjMoveStringLiteralDfa8_0(active0, 0x800000000L);
      case 68:
      case 100:
         return jjMoveStringLiteralDfa8_0(active0, 0x80000000L);
      case 69:
      case 101:
         if ((active0 & 0x100000000000000L) != 0L)
         {
            jjmatchedKind = 56;
            jjmatchedPos = 7;
         }
         return jjMoveStringLiteralDfa8_0(active0, 0x1800000000008000L);
      case 73:
      case 105:
         return jjMoveStringLiteralDfa8_0(active0, 0x10000100000000L);
      case 76:
      case 108:
         if ((active0 & 0x10000000000L) != 0L)
            return jjStopAtPos(7, 40);
         break;
      case 78:
      case 110:
         return jjMoveStringLiteralDfa8_0(active0, 0x820000L);
      case 79:
      case 111:
         return jjMoveStringLiteralDfa8_0(active0, 0x62000000L);
      case 82:
      case 114:
         return jjMoveStringLiteralDfa8_0(active0, 0x4000000000000000L);
      case 83:
      case 115:
         if ((active0 & 0x400L) != 0L)
            return jjStopAtPos(7, 10);
         break;
      case 84:
      case 116:
         if ((active0 & 0x20000000000L) != 0L)
            return jjStopAtPos(7, 41);
         return jjMoveStringLiteralDfa8_0(active0, 0x8000000010000000L);
      case 86:
      case 118:
         return jjMoveStringLiteralDfa8_0(active0, 0x8000000L);
      case 87:
      case 119:
         return jjMoveStringLiteralDfa8_0(active0, 0x2000000000000000L);
      default :
         break;
   }
   return jjStartNfa_0(6, active0, 0L);
}
private int jjMoveStringLiteralDfa8_0(long old0, long active0)
{
   if (((active0 &= old0)) == 0L)
      return jjStartNfa_0(6, old0, 0L);
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_0(7, active0, 0L);
      return 8;
   }
   switch(curChar)
   {
      case 45:
         return jjMoveStringLiteralDfa9_0(active0, 0x1800000000000000L);
      case 67:
      case 99:
         return jjMoveStringLiteralDfa9_0(active0, 0x20000L);
      case 69:
      case 101:
         return jjMoveStringLiteralDfa9_0(active0, 0x8000000818000000L);
      case 73:
      case 105:
         return jjMoveStringLiteralDfa9_0(active0, 0x6000000080010000L);
      case 77:
      case 109:
         return jjMoveStringLiteralDfa9_0(active0, 0x10000000008000L);
      case 78:
      case 110:
         if ((active0 & 0x20000000L) != 0L)
            return jjStartNfaWithStates_0(8, 29, 165);
         else if ((active0 & 0x40000000L) != 0L)
            return jjStartNfaWithStates_0(8, 30, 73);
         return jjMoveStringLiteralDfa9_0(active0, 0x2000000L);
      case 79:
      case 111:
         return jjMoveStringLiteralDfa9_0(active0, 0x400000100000000L);
      case 84:
      case 116:
         return jjMoveStringLiteralDfa9_0(active0, 0x1800000L);
      default :
         break;
   }
   return jjStartNfa_0(7, active0, 0L);
}
private int jjMoveStringLiteralDfa9_0(long old0, long active0)
{
   if (((active0 &= old0)) == 0L)
      return jjStartNfa_0(7, old0, 0L);
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_0(8, active0, 0L);
      return 9;
   }
   switch(curChar)
   {
      case 45:
         return jjMoveStringLiteralDfa10_0(active0, 0x8000000L);
      case 65:
      case 97:
         return jjMoveStringLiteralDfa10_0(active0, 0x800000000000000L);
      case 66:
      case 98:
         return jjMoveStringLiteralDfa10_0(active0, 0x1000000000000000L);
      case 69:
      case 101:
         if ((active0 & 0x20000L) != 0L)
            return jjStartNfaWithStates_0(9, 17, 77);
         else if ((active0 & 0x10000000000000L) != 0L)
            return jjStartNfaWithStates_0(9, 52, 77);
         return jjMoveStringLiteralDfa10_0(active0, 0x1008000L);
      case 78:
      case 110:
         if ((active0 & 0x100000000L) != 0L)
            return jjStartNfaWithStates_0(9, 32, 279);
         return jjMoveStringLiteralDfa10_0(active0, 0x4400000000010000L);
      case 82:
      case 114:
         if ((active0 & 0x8000000000000000L) != 0L)
            return jjStartNfaWithStates_0(9, 63, 77);
         return jjMoveStringLiteralDfa10_0(active0, 0x810000000L);
      case 83:
      case 115:
         if ((active0 & 0x800000L) != 0L)
            return jjStopAtPos(9, 23);
         else if ((active0 & 0x2000000L) != 0L)
            return jjStopAtPos(9, 25);
         break;
      case 84:
      case 116:
         return jjMoveStringLiteralDfa10_0(active0, 0x2000000080000000L);
      default :
         break;
   }
   return jjStartNfa_0(8, active0, 0L);
}
private int jjMoveStringLiteralDfa10_0(long old0, long active0)
{
   if (((active0 &= old0)) == 0L)
      return jjStartNfa_0(8, old0, 0L);
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_0(9, active0, 0L);
      return 10;
   }
   switch(curChar)
   {
      case 62:
         if ((active0 & 0x800000000L) != 0L)
            return jjStopAtPos(10, 35);
         break;
      case 65:
      case 97:
         return jjMoveStringLiteralDfa11_0(active0, 0x8000000L);
      case 67:
      case 99:
         return jjMoveStringLiteralDfa11_0(active0, 0x400000000000000L);
      case 69:
      case 101:
         return jjMoveStringLiteralDfa11_0(active0, 0x1000000000000000L);
      case 70:
      case 102:
         return jjMoveStringLiteralDfa11_0(active0, 0x800000000000000L);
      case 71:
      case 103:
         if ((active0 & 0x4000000000000000L) != 0L)
            return jjStartNfaWithStates_0(10, 62, 77);
         break;
      case 72:
      case 104:
         return jjMoveStringLiteralDfa11_0(active0, 0x2000000000000000L);
      case 73:
      case 105:
         return jjMoveStringLiteralDfa11_0(active0, 0x80000000L);
      case 78:
      case 110:
         return jjMoveStringLiteralDfa11_0(active0, 0x8000L);
      case 83:
      case 115:
         if ((active0 & 0x1000000L) != 0L)
            return jjStopAtPos(10, 24);
         else if ((active0 & 0x10000000L) != 0L)
            return jjStopAtPos(10, 28);
         break;
      case 84:
      case 116:
         return jjMoveStringLiteralDfa11_0(active0, 0x10000L);
      default :
         break;
   }
   return jjStartNfa_0(9, active0, 0L);
}
private int jjMoveStringLiteralDfa11_0(long old0, long active0)
{
   if (((active0 &= old0)) == 0L)
      return jjStartNfa_0(9, old0, 0L);
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_0(10, active0, 0L);
      return 11;
   }
   switch(curChar)
   {
      case 67:
      case 99:
         return jjMoveStringLiteralDfa12_0(active0, 0x8000000L);
      case 69:
      case 101:
         if ((active0 & 0x400000000000000L) != 0L)
            return jjStartNfaWithStates_0(11, 58, 77);
         break;
      case 70:
      case 102:
         return jjMoveStringLiteralDfa12_0(active0, 0x1000000000000000L);
      case 73:
      case 105:
         return jjMoveStringLiteralDfa12_0(active0, 0x2000000000000000L);
      case 79:
      case 111:
         return jjMoveStringLiteralDfa12_0(active0, 0x80000000L);
      case 83:
      case 115:
         if ((active0 & 0x10000L) != 0L)
            return jjStopAtPos(11, 16);
         break;
      case 84:
      case 116:
         return jjMoveStringLiteralDfa12_0(active0, 0x800000000008000L);
      default :
         break;
   }
   return jjStartNfa_0(10, active0, 0L);
}
private int jjMoveStringLiteralDfa12_0(long old0, long active0)
{
   if (((active0 &= old0)) == 0L)
      return jjStartNfa_0(10, old0, 0L);
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_0(11, active0, 0L);
      return 12;
   }
   switch(curChar)
   {
      case 69:
      case 101:
         return jjMoveStringLiteralDfa13_0(active0, 0x800000000000000L);
      case 78:
      case 110:
         if ((active0 & 0x80000000L) != 0L)
            return jjStopAtPos(12, 31);
         else if ((active0 & 0x2000000000000000L) != 0L)
            return jjStartNfaWithStates_0(12, 61, 77);
         break;
      case 79:
      case 111:
         return jjMoveStringLiteralDfa13_0(active0, 0x1000000000000000L);
      case 83:
      case 115:
         if ((active0 & 0x8000L) != 0L)
            return jjStopAtPos(12, 15);
         break;
      case 84:
      case 116:
         return jjMoveStringLiteralDfa13_0(active0, 0x8000000L);
      default :
         break;
   }
   return jjStartNfa_0(11, active0, 0L);
}
private int jjMoveStringLiteralDfa13_0(long old0, long active0)
{
   if (((active0 &= old0)) == 0L)
      return jjStartNfa_0(11, old0, 0L);
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_0(12, active0, 0L);
      return 13;
   }
   switch(curChar)
   {
      case 73:
      case 105:
         return jjMoveStringLiteralDfa14_0(active0, 0x8000000L);
      case 82:
      case 114:
         if ((active0 & 0x800000000000000L) != 0L)
            return jjStartNfaWithStates_0(13, 59, 77);
         return jjMoveStringLiteralDfa14_0(active0, 0x1000000000000000L);
      default :
         break;
   }
   return jjStartNfa_0(12, active0, 0L);
}
private int jjMoveStringLiteralDfa14_0(long old0, long active0)
{
   if (((active0 &= old0)) == 0L)
      return jjStartNfa_0(12, old0, 0L);
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_0(13, active0, 0L);
      return 14;
   }
   switch(curChar)
   {
      case 69:
      case 101:
         if ((active0 & 0x1000000000000000L) != 0L)
            return jjStartNfaWithStates_0(14, 60, 77);
         break;
      case 79:
      case 111:
         return jjMoveStringLiteralDfa15_0(active0, 0x8000000L);
      default :
         break;
   }
   return jjStartNfa_0(13, active0, 0L);
}
private int jjMoveStringLiteralDfa15_0(long old0, long active0)
{
   if (((active0 &= old0)) == 0L)
      return jjStartNfa_0(13, old0, 0L);
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_0(14, active0, 0L);
      return 15;
   }
   switch(curChar)
   {
      case 78:
      case 110:
         if ((active0 & 0x8000000L) != 0L)
            return jjStartNfaWithStates_0(15, 27, 0);
         break;
      default :
         break;
   }
   return jjStartNfa_0(14, active0, 0L);
}
private int jjStartNfaWithStates_0(int pos, int kind, int state)
{
   jjmatchedKind = kind;
   jjmatchedPos = pos;
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) { return pos + 1; }
   return jjMoveNfa_0(state, pos + 1);
}
static final long[] jjbitVec0 = {
   0x0L, 0x0L, 0xffffffffffffffffL, 0xffffffffffffffffL
};
private int jjMoveNfa_0(int startState, int curPos)
{
   int startsAt = 0;
   jjnewStateCnt = 483;
   int i = 1;
   jjstateSet[0] = startState;
   int kind = 0x7fffffff;
   for (;;)
   {
      if (++jjround == 0x7fffffff)
         ReInitRounds();
      if (curChar < 64)
      {
         long l = 1L << curChar;
         do
         {
            switch(jjstateSet[--i])
            {
               case 69:
               case 77:
                  if ((0x3ff200000000000L & l) == 0L)
                     break;
                  if (kind > 65)
                     kind = 65;
                  jjCheckNAdd(77);
                  break;
               case 70:
                  if ((0x3ff200000000000L & l) == 0L)
                     break;
                  if (kind > 65)
                     kind = 65;
                  jjCheckNAdd(77);
                  break;
               case 104:
                  if ((0x3ff200000000000L & l) == 0L)
                     break;
                  if (kind > 65)
                     kind = 65;
                  jjCheckNAdd(77);
                  break;
               case 55:
                  if ((0x3ff200000000000L & l) == 0L)
                     break;
                  if (kind > 65)
                     kind = 65;
                  jjCheckNAdd(77);
                  break;
               case 22:
                  if ((0x3ff200000000000L & l) != 0L)
                  {
                     if (kind > 65)
                        kind = 65;
                     jjCheckNAdd(77);
                  }
                  else if ((0x7000000000000000L & l) != 0L)
                  {
                     if (kind > 49)
                        kind = 49;
                  }
                  else if ((0x8c0000000000L & l) != 0L)
                  {
                     if (kind > 48)
                        kind = 48;
                  }
                  else if (curChar == 58)
                     jjAddStates(0, 25);
                  else if (curChar == 59)
                     jjCheckNAddStates(26, 29);
                  else if (curChar == 63)
                     jjCheckNAdd(73);
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 64)
                        kind = 64;
                     jjCheckNAddTwoStates(74, 75);
                  }
                  else if (curChar == 60)
                     jjCheckNAdd(48);
                  else if (curChar == 62)
                     jjCheckNAdd(48);
                  break;
               case 192:
                  if (curChar == 45)
                     jjstateSet[jjnewStateCnt++] = 359;
                  if (curChar == 45)
                     jjstateSet[jjnewStateCnt++] = 191;
                  break;
               case 63:
                  if ((0x3ff200000000000L & l) == 0L)
                     break;
                  if (kind > 65)
                     kind = 65;
                  jjCheckNAdd(77);
                  break;
               case 13:
                  if (curChar == 45)
                     jjstateSet[jjnewStateCnt++] = 12;
                  break;
               case 35:
                  if (curChar == 45)
                     jjstateSet[jjnewStateCnt++] = 34;
                  break;
               case 46:
                  if ((0x8c0000000000L & l) != 0L && kind > 48)
                     kind = 48;
                  break;
               case 47:
                  if ((0x7000000000000000L & l) != 0L && kind > 49)
                     kind = 49;
                  break;
               case 48:
                  if (curChar == 61 && kind > 49)
                     kind = 49;
                  break;
               case 49:
                  if (curChar == 62)
                     jjCheckNAdd(48);
                  break;
               case 50:
                  if (curChar == 60)
                     jjCheckNAdd(48);
                  break;
               case 72:
                  if (curChar == 63)
                     jjCheckNAdd(73);
                  break;
               case 73:
                  if ((0x3ff200000000000L & l) == 0L)
                     break;
                  if (kind > 54)
                     kind = 54;
                  jjCheckNAdd(73);
                  break;
               case 74:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 64)
                     kind = 64;
                  jjCheckNAddTwoStates(74, 75);
                  break;
               case 75:
                  if (curChar == 46)
                     jjCheckNAdd(76);
                  break;
               case 76:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 64)
                     kind = 64;
                  jjCheckNAdd(76);
                  break;
               case 78:
                  if (curChar == 59)
                     jjCheckNAddStates(26, 29);
                  break;
               case 79:
                  if ((0xffffffffffffdbffL & l) != 0L)
                     jjCheckNAddStates(30, 32);
                  break;
               case 80:
                  if ((0x2400L & l) != 0L && kind > 66)
                     kind = 66;
                  break;
               case 81:
                  if (curChar == 10 && kind > 66)
                     kind = 66;
                  break;
               case 82:
                  if (curChar == 13)
                     jjstateSet[jjnewStateCnt++] = 81;
                  break;
               case 100:
                  if (curChar == 45)
                     jjstateSet[jjnewStateCnt++] = 99;
                  break;
               case 108:
                  if (curChar == 45)
                     jjstateSet[jjnewStateCnt++] = 107;
                  break;
               case 113:
                  if (curChar == 58)
                     jjAddStates(0, 25);
                  break;
               case 145:
                  if (curChar == 45)
                     jjstateSet[jjnewStateCnt++] = 144;
                  break;
               case 165:
                  if (curChar == 45)
                     jjstateSet[jjnewStateCnt++] = 164;
                  break;
               case 180:
                  if (curChar == 45)
                     jjstateSet[jjnewStateCnt++] = 179;
                  break;
               case 214:
                  if (curChar == 45)
                     jjstateSet[jjnewStateCnt++] = 213;
                  break;
               case 235:
                  if (curChar == 45)
                     jjstateSet[jjnewStateCnt++] = 234;
                  break;
               case 259:
                  if (curChar == 45)
                     jjstateSet[jjnewStateCnt++] = 258;
                  break;
               case 277:
                  if (curChar == 45)
                     jjstateSet[jjnewStateCnt++] = 276;
                  break;
               case 296:
                  if (curChar == 45)
                     jjstateSet[jjnewStateCnt++] = 295;
                  break;
               case 304:
                  if (curChar == 45)
                     jjstateSet[jjnewStateCnt++] = 303;
                  break;
               case 326:
                  if (curChar == 45)
                     jjstateSet[jjnewStateCnt++] = 325;
                  break;
               case 342:
                  if (curChar == 45)
                     jjstateSet[jjnewStateCnt++] = 341;
                  break;
               case 360:
                  if (curChar == 45)
                     jjstateSet[jjnewStateCnt++] = 359;
                  break;
               case 376:
                  if (curChar == 45)
                     jjstateSet[jjnewStateCnt++] = 375;
                  break;
               case 393:
                  if (curChar == 45)
                     jjstateSet[jjnewStateCnt++] = 392;
                  break;
               case 402:
                  if (curChar == 45)
                     jjstateSet[jjnewStateCnt++] = 401;
                  break;
               case 410:
                  if (curChar == 45)
                     jjstateSet[jjnewStateCnt++] = 409;
                  break;
               case 428:
                  if (curChar == 45)
                     jjstateSet[jjnewStateCnt++] = 427;
                  break;
               case 445:
                  if (curChar == 45)
                     jjstateSet[jjnewStateCnt++] = 444;
                  break;
               case 461:
                  if (curChar == 45)
                     jjstateSet[jjnewStateCnt++] = 460;
                  break;
               case 473:
                  if (curChar == 45)
                     jjstateSet[jjnewStateCnt++] = 472;
                  break;
               default : break;
            }
         } while(i != startsAt);
      }
      else if (curChar < 128)
      {
         long l = 1L << (curChar & 077);
         do
         {
            switch(jjstateSet[--i])
            {
               case 149:
                  if ((0x10000000100000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 168;
                  if ((0x10000000100000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 148;
                  break;
               case 152:
                  if ((0x200000002L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 394;
                  else if ((0x2000000020L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 347;
                  else if ((0x800000008000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 330;
                  else if ((0x20000000200L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 244;
                  else if ((0x20000000200000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 171;
                  if ((0x20000000200000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 151;
                  break;
               case 69:
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 65)
                        kind = 65;
                     jjCheckNAdd(77);
                  }
                  if ((0x800000008L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 68;
                  break;
               case 137:
                  if ((0x800000008000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 381;
                  else if ((0x100000001000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 136;
                  break;
               case 70:
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 65)
                        kind = 65;
                     jjCheckNAdd(77);
                  }
                  if ((0x2000000020L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 69;
                  break;
               case 147:
                  if ((0x800000008000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 166;
                  else if ((0x40000000400000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 146;
                  break;
               case 104:
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 65)
                        kind = 65;
                     jjCheckNAdd(77);
                  }
                  if ((0x800000008L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 111;
                  if ((0x800000008L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 103;
                  break;
               case 194:
                  if ((0x800000008000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 361;
                  if ((0x800000008000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 193;
                  break;
               case 195:
                  if ((0x20000000200L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 362;
                  if ((0x20000000200L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 194;
                  break;
               case 196:
                  if ((0x10000000100000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 363;
                  if ((0x10000000100000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 195;
                  break;
               case 55:
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 65)
                        kind = 65;
                     jjCheckNAdd(77);
                  }
                  if ((0x8000000080000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 54;
                  break;
               case 119:
                  if ((0x20000000200000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 481;
                  else if ((0x10000000100000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 476;
                  else if ((0x800000008000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 464;
                  else if ((0x2000000020L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 454;
                  else if ((0x8000000080000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 433;
                  else if ((0x1000000010L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 395;
                  else if ((0x4000000040L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 382;
                  else if ((0x200000002L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 365;
                  else if ((0x1000000010000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 318;
                  else if ((0x800000008L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 287;
                  else if ((0x400000004000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 221;
                  if ((0x8000000080000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 416;
                  else if ((0x1000000010L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 348;
                  else if ((0x10000000100000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 308;
                  else if ((0x2000000020L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 269;
                  else if ((0x200000002L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 200;
                  else if ((0x400000004000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 186;
                  else if ((0x4000000040L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 137;
                  if ((0x1000000010L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 331;
                  else if ((0x200000002L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 197;
                  else if ((0x2000000020L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 131;
                  else if ((0x8000000080000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 123;
                  else if ((0x10000000100000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 118;
                  if ((0x1000000010L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 245;
                  if ((0x1000000010L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 172;
                  if ((0x1000000010L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 152;
                  break;
               case 150:
                  if ((0x200000002L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 169;
                  if ((0x200000002L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 149;
                  break;
               case 197:
                  if ((0x800000008L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 364;
                  else if ((0x1000000010L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 199;
                  if ((0x800000008L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 196;
                  break;
               case 151:
                  if ((0x4000000040000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 170;
                  if ((0x4000000040000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 150;
                  break;
               case 22:
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 65)
                        kind = 65;
                     jjCheckNAdd(77);
                  }
                  if ((0x8000000080000L & l) != 0L)
                     jjAddStates(33, 34);
                  else if ((0x200000002000L & l) != 0L)
                     jjAddStates(35, 36);
                  else if ((0x1000000010L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 70;
                  else if ((0x20000000200L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 63;
                  else if ((0x200000002L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 55;
                  else if ((0x2000000020000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 44;
                  else if ((0x20000000200000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 21;
                  break;
               case 118:
                  if ((0x4000000040000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 475;
                  else if ((0x20000000200L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 307;
                  else if ((0x200000002000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 117;
                  break;
               case 193:
                  if ((0x400000004000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 360;
                  if ((0x400000004000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 192;
                  break;
               case 131:
                  if ((0x100000001000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 453;
                  else if ((0x2000000020000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 130;
                  if ((0x100000001000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 268;
                  break;
               case 63:
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 65)
                        kind = 65;
                     jjCheckNAdd(77);
                  }
                  if ((0x400000004000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 62;
                  break;
               case 148:
                  if ((0x20000000200L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 167;
                  if ((0x20000000200L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 147;
                  break;
               case 0:
                  if ((0x8000000080000L & l) != 0L && kind > 18)
                     kind = 18;
                  break;
               case 1:
               case 23:
               case 139:
               case 202:
               case 223:
               case 247:
                  if ((0x400000004000L & l) != 0L)
                     jjCheckNAdd(0);
                  break;
               case 2:
                  if ((0x800000008000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 1;
                  break;
               case 3:
                  if ((0x20000000200L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 2;
                  break;
               case 4:
                  if ((0x10000000100000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 3;
                  break;
               case 5:
                  if ((0x20000000200L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 4;
                  break;
               case 6:
                  if ((0x1000000010L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 5;
                  break;
               case 7:
                  if ((0x400000004000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 6;
                  break;
               case 8:
                  if ((0x800000008000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 7;
                  break;
               case 9:
                  if ((0x800000008L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 8;
                  break;
               case 10:
                  if ((0x2000000020L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 9;
                  break;
               case 11:
                  if ((0x4000000040000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 10;
                  break;
               case 12:
                  if ((0x1000000010000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 11;
                  break;
               case 14:
                  if ((0x100000001000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 13;
                  break;
               case 15:
                  if ((0x200000002L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 14;
                  break;
               case 16:
                  if ((0x8000000080000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 15;
                  break;
               case 17:
                  if ((0x4000000040000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 16;
                  break;
               case 18:
                  if ((0x2000000020L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 17;
                  break;
               case 19:
                  if ((0x40000000400000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 18;
                  break;
               case 20:
                  if ((0x20000000200L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 19;
                  break;
               case 21:
                  if ((0x400000004000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 20;
                  break;
               case 24:
                  if ((0x800000008000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 23;
                  break;
               case 25:
                  if ((0x20000000200L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 24;
                  break;
               case 26:
                  if ((0x10000000100000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 25;
                  break;
               case 27:
                  if ((0x20000000200L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 26;
                  break;
               case 28:
                  if ((0x1000000010L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 27;
                  break;
               case 29:
                  if ((0x400000004000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 28;
                  break;
               case 30:
                  if ((0x800000008000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 29;
                  break;
               case 31:
                  if ((0x800000008L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 30;
                  break;
               case 32:
                  if ((0x2000000020L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 31;
                  break;
               case 33:
                  if ((0x4000000040000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 32;
                  break;
               case 34:
                  if ((0x1000000010000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 33;
                  break;
               case 36:
                  if ((0x1000000010L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 35;
                  break;
               case 37:
                  if ((0x2000000020L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 36;
                  break;
               case 38:
                  if ((0x20000000200L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 37;
                  break;
               case 39:
                  if ((0x4000000040L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 38;
                  break;
               case 40:
                  if ((0x20000000200L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 39;
                  break;
               case 41:
                  if ((0x10000000100000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 40;
                  break;
               case 42:
                  if ((0x400000004000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 41;
                  break;
               case 43:
                  if ((0x200000002L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 42;
                  break;
               case 44:
                  if ((0x20000000200000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 43;
                  break;
               case 45:
                  if ((0x2000000020000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 44;
                  break;
               case 51:
                  if ((0x400000004000L & l) != 0L && kind > 50)
                     kind = 50;
                  break;
               case 52:
                  if ((0x8000000080L & l) != 0L)
                     jjCheckNAdd(51);
                  break;
               case 53:
                  if ((0x20000000200L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 52;
                  break;
               case 54:
                  if ((0x8000000080000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 53;
                  break;
               case 56:
                  if ((0x200000002L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 55;
                  break;
               case 57:
                  if ((0x2000000020L & l) != 0L && kind > 50)
                     kind = 50;
                  break;
               case 58:
               case 65:
                  if ((0x8000000080000L & l) != 0L)
                     jjCheckNAdd(57);
                  break;
               case 59:
                  if ((0x200000002L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 58;
                  break;
               case 60:
                  if ((0x2000000020L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 59;
                  break;
               case 61:
                  if ((0x4000000040000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 60;
                  break;
               case 62:
                  if ((0x800000008L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 61;
                  break;
               case 64:
                  if ((0x20000000200L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 63;
                  break;
               case 66:
                  if ((0x200000002L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 65;
                  break;
               case 67:
                  if ((0x2000000020L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 66;
                  break;
               case 68:
                  if ((0x4000000040000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 67;
                  break;
               case 71:
                  if ((0x1000000010L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 70;
                  break;
               case 73:
                  if ((0x7fffffe87fffffeL & l) == 0L)
                     break;
                  if (kind > 54)
                     kind = 54;
                  jjstateSet[jjnewStateCnt++] = 73;
                  break;
               case 77:
                  if ((0x7fffffe87fffffeL & l) == 0L)
                     break;
                  if (kind > 65)
                     kind = 65;
                  jjCheckNAdd(77);
                  break;
               case 79:
                  jjAddStates(30, 32);
                  break;
               case 83:
                  if ((0x200000002000L & l) != 0L)
                     jjAddStates(35, 36);
                  break;
               case 84:
                  if ((0x2000000020L & l) != 0L && kind > 51)
                     kind = 51;
                  break;
               case 85:
               case 91:
                  if ((0x400000004000000L & l) != 0L)
                     jjCheckNAdd(84);
                  break;
               case 86:
                  if ((0x20000000200L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 85;
                  break;
               case 87:
                  if ((0x200000002000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 86;
                  break;
               case 88:
                  if ((0x20000000200L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 87;
                  break;
               case 89:
                  if ((0x400000004000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 88;
                  break;
               case 90:
                  if ((0x20000000200L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 89;
                  break;
               case 92:
                  if ((0x20000000200L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 91;
                  break;
               case 93:
                  if ((0x200000002000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 92;
                  break;
               case 94:
                  if ((0x20000000200L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 93;
                  break;
               case 95:
                  if ((0x100000001000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 94;
                  break;
               case 96:
                  if ((0x200000002L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 95;
                  break;
               case 97:
                  if ((0x8000000080000L & l) != 0L)
                     jjAddStates(33, 34);
                  break;
               case 98:
                  if ((0x1000000010000L & l) != 0L && kind > 50)
                     kind = 50;
                  break;
               case 99:
                  if ((0x20000000200000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 98;
                  break;
               case 101:
                  if ((0x2000000020L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 100;
                  break;
               case 102:
                  if ((0x100000001000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 101;
                  break;
               case 103:
                  if ((0x200000002L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 102;
                  break;
               case 105:
                  if ((0x80000000800000L & l) != 0L)
                     jjCheckNAdd(51);
                  break;
               case 106:
                  if ((0x800000008000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 105;
                  break;
               case 107:
                  if ((0x1000000010L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 106;
                  break;
               case 109:
                  if ((0x2000000020L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 108;
                  break;
               case 110:
                  if ((0x100000001000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 109;
                  break;
               case 111:
                  if ((0x200000002L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 110;
                  break;
               case 112:
                  if ((0x800000008L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 111;
                  break;
               case 114:
                  if ((0x8000000080L & l) != 0L && kind > 18)
                     kind = 18;
                  break;
               case 115:
                  if ((0x400000004000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 114;
                  break;
               case 116:
                  if ((0x20000000200L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 115;
                  break;
               case 117:
                  if ((0x1000000010000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 116;
                  break;
               case 120:
                  if ((0x1000000010000L & l) != 0L)
                     jjCheckNAdd(0);
                  break;
               case 121:
                  if ((0x20000000200L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 120;
                  break;
               case 122:
                  if ((0x4000000040000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 121;
                  break;
               case 123:
                  if ((0x10000000100000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 122;
                  break;
               case 124:
                  if ((0x8000000080000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 123;
                  break;
               case 125:
                  if ((0x200000002000000L & l) != 0L && kind > 18)
                     kind = 18;
                  break;
               case 126:
                  if ((0x10000000100000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 125;
                  break;
               case 127:
                  if ((0x20000000200L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 126;
                  break;
               case 128:
                  if ((0x100000001000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 127;
                  break;
               case 129:
                  if ((0x200000002L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 128;
                  break;
               case 130:
                  if ((0x20000000200000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 129;
                  break;
               case 132:
                  if ((0x2000000020L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 131;
                  break;
               case 133:
               case 174:
               case 188:
               case 271:
                  if ((0x10000000100000L & l) != 0L)
                     jjCheckNAdd(0);
                  break;
               case 134:
                  if ((0x400000004000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 133;
                  break;
               case 135:
                  if ((0x2000000020L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 134;
                  break;
               case 136:
                  if ((0x20000000200000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 135;
                  break;
               case 138:
                  if ((0x4000000040L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 137;
                  break;
               case 140:
                  if ((0x800000008000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 139;
                  break;
               case 141:
                  if ((0x20000000200L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 140;
                  break;
               case 142:
                  if ((0x10000000100000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 141;
                  break;
               case 143:
                  if ((0x800000008L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 142;
                  break;
               case 144:
                  if ((0x200000002L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 143;
                  break;
               case 146:
                  if ((0x2000000020L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 145;
                  break;
               case 153:
                  if ((0x1000000010L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 152;
                  break;
               case 154:
               case 310:
                  if ((0x2000000020L & l) != 0L)
                     jjCheckNAdd(0);
                  break;
               case 155:
                  if ((0x20000000200L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 154;
                  break;
               case 156:
                  if ((0x10000000100000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 155;
                  break;
               case 157:
                  if ((0x20000000200L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 156;
                  break;
               case 158:
                  if ((0x100000001000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 157;
                  break;
               case 159:
                  if ((0x200000002L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 158;
                  break;
               case 160:
                  if ((0x20000000200000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 159;
                  break;
               case 161:
                  if ((0x2000000020000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 160;
                  break;
               case 162:
                  if ((0x2000000020L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 161;
                  break;
               case 163:
                  if ((0x400000004000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 162;
                  break;
               case 164:
                  if ((0x20000000200L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 163;
                  break;
               case 166:
                  if ((0x400000004000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 165;
                  break;
               case 167:
                  if ((0x800000008000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 166;
                  break;
               case 168:
                  if ((0x20000000200L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 167;
                  break;
               case 169:
                  if ((0x10000000100000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 168;
                  break;
               case 170:
                  if ((0x200000002L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 169;
                  break;
               case 171:
                  if ((0x4000000040000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 170;
                  break;
               case 172:
                  if ((0x20000000200000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 171;
                  break;
               case 173:
                  if ((0x1000000010L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 172;
                  break;
               case 175:
                  if ((0x400000004000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 174;
                  break;
               case 176:
                  if ((0x2000000020L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 175;
                  break;
               case 177:
                  if ((0x20000000200000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 176;
                  break;
               case 178:
                  if ((0x100000001000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 177;
                  break;
               case 179:
                  if ((0x4000000040L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 178;
                  break;
               case 181:
                  if ((0x800000008L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 180;
                  break;
               case 182:
                  if ((0x20000000200L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 181;
                  break;
               case 183:
                  if ((0x4000000040000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 182;
                  break;
               case 184:
                  if ((0x2000000020L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 183;
                  break;
               case 185:
                  if ((0x200000002000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 184;
                  break;
               case 186:
                  if ((0x20000000200000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 185;
                  break;
               case 187:
                  if ((0x400000004000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 186;
                  break;
               case 189:
                  if ((0x8000000080000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 188;
                  break;
               case 190:
                  if ((0x800000008000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 189;
                  break;
               case 191:
                  if ((0x800000008L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 190;
                  break;
               case 198:
                  if ((0x200000002L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 197;
                  break;
               case 199:
                  if ((0x100000001000L & l) != 0L && kind > 18)
                     kind = 18;
                  break;
               case 200:
                  if ((0x1000000010L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 199;
                  break;
               case 201:
                  if ((0x200000002L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 200;
                  break;
               case 203:
                  if ((0x800000008000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 202;
                  break;
               case 204:
                  if ((0x20000000200L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 203;
                  break;
               case 205:
                  if ((0x10000000100000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 204;
                  break;
               case 206:
                  if ((0x20000000200L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 205;
                  break;
               case 207:
                  if ((0x1000000010L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 206;
                  break;
               case 208:
                  if ((0x400000004000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 207;
                  break;
               case 209:
                  if ((0x800000008000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 208;
                  break;
               case 210:
                  if ((0x800000008L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 209;
                  break;
               case 211:
                  if ((0x2000000020L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 210;
                  break;
               case 212:
                  if ((0x4000000040000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 211;
                  break;
               case 213:
                  if ((0x1000000010000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 212;
                  break;
               case 215:
                  if ((0x2000000020L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 214;
                  break;
               case 216:
                  if ((0x40000000400000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 215;
                  break;
               case 217:
                  if ((0x20000000200L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 216;
                  break;
               case 218:
                  if ((0x10000000100000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 217;
                  break;
               case 219:
                  if ((0x200000002L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 218;
                  break;
               case 220:
                  if ((0x8000000080L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 219;
                  break;
               case 221:
                  if ((0x2000000020L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 220;
                  break;
               case 222:
                  if ((0x400000004000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 221;
                  break;
               case 224:
                  if ((0x800000008000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 223;
                  break;
               case 225:
                  if ((0x20000000200L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 224;
                  break;
               case 226:
                  if ((0x10000000100000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 225;
                  break;
               case 227:
                  if ((0x20000000200L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 226;
                  break;
               case 228:
                  if ((0x1000000010L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 227;
                  break;
               case 229:
                  if ((0x400000004000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 228;
                  break;
               case 230:
                  if ((0x800000008000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 229;
                  break;
               case 231:
                  if ((0x800000008L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 230;
                  break;
               case 232:
                  if ((0x2000000020L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 231;
                  break;
               case 233:
                  if ((0x4000000040000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 232;
                  break;
               case 234:
                  if ((0x1000000010000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 233;
                  break;
               case 236:
                  if ((0x2000000020L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 235;
                  break;
               case 237:
                  if ((0x40000000400000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 236;
                  break;
               case 238:
                  if ((0x20000000200L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 237;
                  break;
               case 239:
                  if ((0x10000000100000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 238;
                  break;
               case 240:
                  if ((0x800000008L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 239;
                  break;
               case 241:
                  if ((0x400000004000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 240;
                  break;
               case 242:
                  if ((0x20000000200000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 241;
                  break;
               case 243:
                  if ((0x40000000400L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 242;
                  break;
               case 244:
                  if ((0x8000000080000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 243;
                  break;
               case 245:
                  if ((0x20000000200L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 244;
                  break;
               case 246:
                  if ((0x1000000010L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 245;
                  break;
               case 248:
                  if ((0x800000008000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 247;
                  break;
               case 249:
                  if ((0x20000000200L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 248;
                  break;
               case 250:
                  if ((0x10000000100000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 249;
                  break;
               case 251:
                  if ((0x20000000200L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 250;
                  break;
               case 252:
                  if ((0x1000000010L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 251;
                  break;
               case 253:
                  if ((0x400000004000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 252;
                  break;
               case 254:
                  if ((0x800000008000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 253;
                  break;
               case 255:
                  if ((0x800000008L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 254;
                  break;
               case 256:
                  if ((0x2000000020L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 255;
                  break;
               case 257:
                  if ((0x4000000040000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 256;
                  break;
               case 258:
                  if ((0x1000000010000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 257;
                  break;
               case 260:
                  if ((0x100000001000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 259;
                  break;
               case 261:
                  if ((0x200000002L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 260;
                  break;
               case 262:
                  if ((0x20000000200L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 261;
                  break;
               case 263:
                  if ((0x10000000100000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 262;
                  break;
               case 264:
                  if ((0x400000004000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 263;
                  break;
               case 265:
                  if ((0x2000000020L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 264;
                  break;
               case 266:
                  if ((0x10000000100000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 265;
                  break;
               case 267:
                  if ((0x8000000080000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 266;
                  break;
               case 268:
                  if ((0x20000000200L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 267;
                  break;
               case 269:
                  if ((0x100000001000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 268;
                  break;
               case 270:
                  if ((0x2000000020L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 269;
                  break;
               case 272:
                  if ((0x800000008L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 271;
                  break;
               case 273:
                  if ((0x2000000020L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 272;
                  break;
               case 274:
                  if ((0x4000000040L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 273;
                  break;
               case 275:
                  if ((0x4000000040L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 274;
                  break;
               case 276:
                  if ((0x2000000020L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 275;
                  break;
               case 278:
                  if ((0x100000001000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 277;
                  break;
               case 279:
                  if ((0x200000002L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 278;
                  break;
               case 280:
                  if ((0x400000004000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 279;
                  break;
               case 281:
                  if ((0x800000008000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 280;
                  break;
               case 282:
                  if ((0x20000000200L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 281;
                  break;
               case 283:
                  if ((0x10000000100000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 282;
                  break;
               case 284:
                  if ((0x20000000200L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 283;
                  break;
               case 285:
                  if ((0x1000000010L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 284;
                  break;
               case 286:
                  if ((0x400000004000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 285;
                  break;
               case 287:
                  if ((0x800000008000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 286;
                  break;
               case 288:
                  if ((0x800000008L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 287;
                  break;
               case 289:
                  if ((0x100000001000L & l) != 0L)
                     jjCheckNAdd(0);
                  break;
               case 290:
                  if ((0x200000002L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 289;
                  break;
               case 291:
                  if ((0x4000000040000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 290;
                  break;
               case 292:
                  if ((0x2000000020L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 291;
                  break;
               case 293:
                  if ((0x10000000100000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 292;
                  break;
               case 294:
                  if ((0x20000000200L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 293;
                  break;
               case 295:
                  if ((0x100000001000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 294;
                  break;
               case 297:
                  if ((0x100000001000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 296;
                  break;
               case 298:
                  if ((0x200000002L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 297;
                  break;
               case 299:
                  if ((0x20000000200L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 298;
                  break;
               case 300:
                  if ((0x10000000100000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 299;
                  break;
               case 301:
                  if ((0x20000000200L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 300;
                  break;
               case 302:
                  if ((0x400000004000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 301;
                  break;
               case 303:
                  if ((0x20000000200L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 302;
                  break;
               case 305:
                  if ((0x1000000010L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 304;
                  break;
               case 306:
                  if ((0x2000000020L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 305;
                  break;
               case 307:
                  if ((0x200000002000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 306;
                  break;
               case 308:
                  if ((0x20000000200L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 307;
                  break;
               case 309:
                  if ((0x10000000100000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 308;
                  break;
               case 311:
                  if ((0x800000008L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 310;
                  break;
               case 312:
                  if ((0x400000004000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 311;
                  break;
               case 313:
                  if ((0x2000000020L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 312;
                  break;
               case 314:
                  if ((0x4000000040000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 313;
                  break;
               case 315:
                  if ((0x2000000020L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 314;
                  break;
               case 316:
                  if ((0x4000000040L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 315;
                  break;
               case 317:
                  if ((0x2000000020L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 316;
                  break;
               case 318:
                  if ((0x4000000040000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 317;
                  break;
               case 319:
                  if ((0x1000000010000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 318;
                  break;
               case 320:
                  if ((0x8000000080000L & l) != 0L && kind > 19)
                     kind = 19;
                  break;
               case 321:
                  if ((0x200000002000L & l) != 0L)
                     jjCheckNAdd(320);
                  break;
               case 322:
                  if ((0x800000008000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 321;
                  break;
               case 323:
                  if ((0x20000000200L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 322;
                  break;
               case 324:
                  if ((0x100000001000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 323;
                  break;
               case 325:
                  if ((0x200000002L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 324;
                  break;
               case 327:
                  if ((0x400000004000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 326;
                  break;
               case 328:
                  if ((0x20000000200L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 327;
                  break;
               case 329:
                  if ((0x200000002L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 328;
                  break;
               case 330:
                  if ((0x200000002000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 329;
                  break;
               case 331:
                  if ((0x800000008000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 330;
                  break;
               case 332:
                  if ((0x1000000010L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 331;
                  break;
               case 333:
                  if ((0x2000000020L & l) != 0L)
                     jjCheckNAdd(320);
                  break;
               case 334:
                  if ((0x10000000100000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 333;
                  break;
               case 335:
                  if ((0x200000002L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 334;
                  break;
               case 336:
                  if ((0x800000008L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 335;
                  break;
               case 337:
                  if ((0x20000000200L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 336;
                  break;
               case 338:
                  if ((0x1000000010L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 337;
                  break;
               case 339:
                  if ((0x2000000020L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 338;
                  break;
               case 340:
                  if ((0x4000000040000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 339;
                  break;
               case 341:
                  if ((0x1000000010000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 340;
                  break;
               case 343:
                  if ((0x1000000010L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 342;
                  break;
               case 344:
                  if ((0x2000000020L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 343;
                  break;
               case 345:
                  if ((0x40000000400000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 344;
                  break;
               case 346:
                  if ((0x20000000200L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 345;
                  break;
               case 347:
                  if ((0x4000000040000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 346;
                  break;
               case 348:
                  if ((0x2000000020L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 347;
                  break;
               case 349:
                  if ((0x1000000010L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 348;
                  break;
               case 350:
                  if ((0x8000000080000L & l) != 0L && kind > 20)
                     kind = 20;
                  break;
               case 351:
               case 367:
               case 384:
                  if ((0x400000004000L & l) != 0L)
                     jjCheckNAdd(350);
                  break;
               case 352:
                  if ((0x800000008000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 351;
                  break;
               case 353:
                  if ((0x20000000200L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 352;
                  break;
               case 354:
                  if ((0x8000000080000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 353;
                  break;
               case 355:
                  if ((0x400000004000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 354;
                  break;
               case 356:
                  if ((0x200000002L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 355;
                  break;
               case 357:
                  if ((0x1000000010000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 356;
                  break;
               case 358:
                  if ((0x100000001000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 357;
                  break;
               case 359:
                  if ((0x2000000020L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 358;
                  break;
               case 361:
                  if ((0x400000004000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 360;
                  break;
               case 362:
                  if ((0x800000008000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 361;
                  break;
               case 363:
                  if ((0x20000000200L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 362;
                  break;
               case 364:
                  if ((0x10000000100000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 363;
                  break;
               case 365:
                  if ((0x800000008L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 364;
                  break;
               case 366:
                  if ((0x200000002L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 365;
                  break;
               case 368:
                  if ((0x800000008000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 367;
                  break;
               case 369:
                  if ((0x20000000200L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 368;
                  break;
               case 370:
                  if ((0x8000000080000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 369;
                  break;
               case 371:
                  if ((0x400000004000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 370;
                  break;
               case 372:
                  if ((0x200000002L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 371;
                  break;
               case 373:
                  if ((0x1000000010000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 372;
                  break;
               case 374:
                  if ((0x100000001000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 373;
                  break;
               case 375:
                  if ((0x2000000020L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 374;
                  break;
               case 377:
                  if ((0x10000000100L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 376;
                  break;
               case 378:
                  if ((0x800000008L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 377;
                  break;
               case 379:
                  if ((0x200000002L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 378;
                  break;
               case 380:
                  if ((0x2000000020L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 379;
                  break;
               case 381:
                  if ((0x4000000040000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 380;
                  break;
               case 382:
                  if ((0x800000008000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 381;
                  break;
               case 383:
                  if ((0x4000000040L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 382;
                  break;
               case 385:
                  if ((0x800000008000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 384;
                  break;
               case 386:
                  if ((0x20000000200L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 385;
                  break;
               case 387:
                  if ((0x8000000080000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 386;
                  break;
               case 388:
                  if ((0x400000004000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 387;
                  break;
               case 389:
                  if ((0x200000002L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 388;
                  break;
               case 390:
                  if ((0x1000000010000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 389;
                  break;
               case 391:
                  if ((0x100000001000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 390;
                  break;
               case 392:
                  if ((0x2000000020L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 391;
                  break;
               case 394:
                  if ((0x8000000080L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 393;
                  break;
               case 395:
                  if ((0x200000002L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 394;
                  break;
               case 396:
                  if ((0x1000000010L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 395;
                  break;
               case 397:
                  if ((0x200000002000L & l) != 0L)
                     jjCheckNAdd(350);
                  break;
               case 398:
                  if ((0x800000008000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 397;
                  break;
               case 399:
                  if ((0x20000000200L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 398;
                  break;
               case 400:
                  if ((0x100000001000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 399;
                  break;
               case 401:
                  if ((0x200000002L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 400;
                  break;
               case 403:
                  if ((0x10000000100L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 402;
                  break;
               case 404:
                  if ((0x8000000080L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 403;
                  break;
               case 405:
                  if ((0x20000000200000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 404;
                  break;
               case 406:
                  if ((0x800000008000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 405;
                  break;
               case 407:
                  if ((0x4000000040000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 406;
                  break;
               case 408:
                  if ((0x10000000100L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 407;
                  break;
               case 409:
                  if ((0x10000000100000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 408;
                  break;
               case 411:
                  if ((0x100000001000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 410;
                  break;
               case 412:
                  if ((0x200000002L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 411;
                  break;
               case 413:
                  if ((0x800000008000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 412;
                  break;
               case 414:
                  if ((0x8000000080L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 413;
                  break;
               case 415:
                  if ((0x400000004L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 414;
                  break;
               case 416:
                  if ((0x20000000200000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 415;
                  break;
               case 417:
                  if ((0x8000000080000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 416;
                  break;
               case 418:
                  if ((0x10000000100000L & l) != 0L)
                     jjCheckNAdd(350);
                  break;
               case 419:
                  if ((0x400000004000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 418;
                  break;
               case 420:
                  if ((0x20000000200L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 419;
                  break;
               case 421:
                  if ((0x200000002L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 420;
                  break;
               case 422:
                  if ((0x4000000040000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 421;
                  break;
               case 423:
                  if ((0x10000000100000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 422;
                  break;
               case 424:
                  if ((0x8000000080000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 423;
                  break;
               case 425:
                  if ((0x400000004000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 424;
                  break;
               case 426:
                  if ((0x800000008000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 425;
                  break;
               case 427:
                  if ((0x800000008L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 426;
                  break;
               case 429:
                  if ((0x200000002000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 428;
                  break;
               case 430:
                  if ((0x10000000100000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 429;
                  break;
               case 431:
                  if ((0x2000000020L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 430;
                  break;
               case 432:
                  if ((0x4000000040L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 431;
                  break;
               case 433:
                  if ((0x200000002L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 432;
                  break;
               case 434:
                  if ((0x8000000080000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 433;
                  break;
               case 435:
                  if ((0x400000004000L & l) != 0L && kind > 20)
                     kind = 20;
                  break;
               case 436:
               case 466:
                  if ((0x800000008000L & l) != 0L)
                     jjCheckNAdd(435);
                  break;
               case 437:
                  if ((0x20000000200L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 436;
                  break;
               case 438:
                  if ((0x10000000100000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 437;
                  break;
               case 439:
                  if ((0x200000002L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 438;
                  break;
               case 440:
                  if ((0x20000000200000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 439;
                  break;
               case 441:
                  if ((0x100000001000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 440;
                  break;
               case 442:
                  if ((0x200000002L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 441;
                  break;
               case 443:
                  if ((0x40000000400000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 442;
                  break;
               case 444:
                  if ((0x2000000020L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 443;
                  break;
               case 446:
                  if ((0x400000004000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 445;
                  break;
               case 447:
                  if ((0x800000008000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 446;
                  break;
               case 448:
                  if ((0x20000000200L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 447;
                  break;
               case 449:
                  if ((0x8000000080000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 448;
                  break;
               case 450:
                  if ((0x8000000080000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 449;
                  break;
               case 451:
                  if ((0x2000000020L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 450;
                  break;
               case 452:
                  if ((0x4000000040000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 451;
                  break;
               case 453:
                  if ((0x1000000010000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 452;
                  break;
               case 454:
                  if ((0x100000001000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 453;
                  break;
               case 455:
                  if ((0x2000000020L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 454;
                  break;
               case 456:
                  if ((0x1000000010L & l) != 0L && kind > 20)
                     kind = 20;
                  break;
               case 457:
                  if ((0x100000001000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 456;
                  break;
               case 458:
                  if ((0x4000000040000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 457;
                  break;
               case 459:
                  if ((0x800000008000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 458;
                  break;
               case 460:
                  if ((0x80000000800000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 459;
                  break;
               case 462:
                  if ((0x400000004000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 461;
                  break;
               case 463:
                  if ((0x2000000020L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 462;
                  break;
               case 464:
                  if ((0x1000000010000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 463;
                  break;
               case 465:
                  if ((0x800000008000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 464;
                  break;
               case 467:
                  if ((0x20000000200L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 466;
                  break;
               case 468:
                  if ((0x10000000100000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 467;
                  break;
               case 469:
                  if ((0x200000002L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 468;
                  break;
               case 470:
                  if ((0x8000000080L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 469;
                  break;
               case 471:
                  if ((0x2000000020L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 470;
                  break;
               case 472:
                  if ((0x400000004000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 471;
                  break;
               case 474:
                  if ((0x2000000020L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 473;
                  break;
               case 475:
                  if ((0x20000000200000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 474;
                  break;
               case 476:
                  if ((0x4000000040000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 475;
                  break;
               case 477:
                  if ((0x10000000100000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 476;
                  break;
               case 478:
                  if ((0x1000000010000L & l) != 0L && kind > 20)
                     kind = 20;
                  break;
               case 479:
                  if ((0x800000008000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 478;
                  break;
               case 480:
                  if ((0x1000000010000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 479;
                  break;
               case 481:
                  if ((0x800000008L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 480;
                  break;
               case 482:
                  if ((0x20000000200000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 481;
                  break;
               default : break;
            }
         } while(i != startsAt);
      }
      else
      {
         int i2 = (curChar & 0xff) >> 6;
         long l2 = 1L << (curChar & 077);
         do
         {
            switch(jjstateSet[--i])
            {
               case 79:
                  if ((jjbitVec0[i2] & l2) != 0L)
                     jjAddStates(30, 32);
                  break;
               default : break;
            }
         } while(i != startsAt);
      }
      if (kind != 0x7fffffff)
      {
         jjmatchedKind = kind;
         jjmatchedPos = curPos;
         kind = 0x7fffffff;
      }
      ++curPos;
      if ((i = jjnewStateCnt) == (startsAt = 483 - (jjnewStateCnt = startsAt)))
         return curPos;
      try { curChar = input_stream.readChar(); }
      catch(java.io.IOException e) { return curPos; }
   }
}
static final int[] jjnextStates = {
   119, 124, 132, 138, 153, 173, 187, 198, 201, 222, 246, 270, 288, 309, 319, 332, 
   349, 366, 383, 396, 417, 434, 455, 465, 477, 482, 78, 79, 80, 82, 79, 80, 
   82, 104, 112, 90, 96, 
};

/** Token literal values. */
public static final String[] jjstrLiteralImages = {
"", null, null, null, null, "\50", "\51", null, null, null, null, null, null, 
null, null, null, null, null, null, null, null, null, null, null, null, null, null, 
null, null, null, null, null, null, null, null, null, null, null, null, null, null, 
null, null, null, null, null, "\75", "\55", null, null, null, null, null, null, null, 
null, null, null, null, null, null, null, null, null, null, null, null, };

/** Lexer state names. */
public static final String[] lexStateNames = {
   "DEFAULT",
};
static final long[] jjtoToken = {
   0xffffffffffffffe1L, 0x3L, 
};
static final long[] jjtoSkip = {
   0x1eL, 0x4L, 
};
static final long[] jjtoSpecial = {
   0x0L, 0x4L, 
};
protected SimpleCharStream input_stream;
private final int[] jjrounds = new int[483];
private final int[] jjstateSet = new int[966];
protected char curChar;
/** Constructor. */
public PDDL30parserTokenManager(SimpleCharStream stream){
   if (SimpleCharStream.staticFlag)
      throw new Error("ERROR: Cannot use a static CharStream class with a non-static lexical analyzer.");
   input_stream = stream;
}

/** Constructor. */
public PDDL30parserTokenManager(SimpleCharStream stream, int lexState){
   this(stream);
   SwitchTo(lexState);
}

/** Reinitialise parser. */
public void ReInit(SimpleCharStream stream)
{
   jjmatchedPos = jjnewStateCnt = 0;
   curLexState = defaultLexState;
   input_stream = stream;
   ReInitRounds();
}
private void ReInitRounds()
{
   int i;
   jjround = 0x80000001;
   for (i = 483; i-- > 0;)
      jjrounds[i] = 0x80000000;
}

/** Reinitialise parser. */
public void ReInit(SimpleCharStream stream, int lexState)
{
   ReInit(stream);
   SwitchTo(lexState);
}

/** Switch to specified lex state. */
public void SwitchTo(int lexState)
{
   if (lexState >= 1 || lexState < 0)
      throw new TokenMgrError("Error: Ignoring invalid lexical state : " + lexState + ". State unchanged.", TokenMgrError.INVALID_LEXICAL_STATE);
   else
      curLexState = lexState;
}

protected Token jjFillToken()
{
   final Token t;
   final String curTokenImage;
   final int beginLine;
   final int endLine;
   final int beginColumn;
   final int endColumn;
   String im = jjstrLiteralImages[jjmatchedKind];
   curTokenImage = (im == null) ? input_stream.GetImage() : im;
   beginLine = input_stream.getBeginLine();
   beginColumn = input_stream.getBeginColumn();
   endLine = input_stream.getEndLine();
   endColumn = input_stream.getEndColumn();
   t = Token.newToken(jjmatchedKind, curTokenImage);

   t.beginLine = beginLine;
   t.endLine = endLine;
   t.beginColumn = beginColumn;
   t.endColumn = endColumn;

   return t;
}

int curLexState = 0;
int defaultLexState = 0;
int jjnewStateCnt;
int jjround;
int jjmatchedPos;
int jjmatchedKind;

/** Get the next Token. */
public Token getNextToken() 
{
  Token specialToken = null;
  Token matchedToken;
  int curPos = 0;

  EOFLoop :
  for (;;)
  {
   try
   {
      curChar = input_stream.BeginToken();
   }
   catch(java.io.IOException e)
   {
      jjmatchedKind = 0;
      matchedToken = jjFillToken();
      matchedToken.specialToken = specialToken;
      return matchedToken;
   }

   try { input_stream.backup(0);
      while (curChar <= 32 && (0x100002600L & (1L << curChar)) != 0L)
         curChar = input_stream.BeginToken();
   }
   catch (java.io.IOException e1) { continue EOFLoop; }
   jjmatchedKind = 0x7fffffff;
   jjmatchedPos = 0;
   curPos = jjMoveStringLiteralDfa0_0();
   if (jjmatchedKind != 0x7fffffff)
   {
      if (jjmatchedPos + 1 < curPos)
         input_stream.backup(curPos - jjmatchedPos - 1);
      if ((jjtoToken[jjmatchedKind >> 6] & (1L << (jjmatchedKind & 077))) != 0L)
      {
         matchedToken = jjFillToken();
         matchedToken.specialToken = specialToken;
         return matchedToken;
      }
      else
      {
         if ((jjtoSpecial[jjmatchedKind >> 6] & (1L << (jjmatchedKind & 077))) != 0L)
         {
            matchedToken = jjFillToken();
            if (specialToken == null)
               specialToken = matchedToken;
            else
            {
               matchedToken.specialToken = specialToken;
               specialToken = (specialToken.next = matchedToken);
            }
         }
         continue EOFLoop;
      }
   }
   int error_line = input_stream.getEndLine();
   int error_column = input_stream.getEndColumn();
   String error_after = null;
   boolean EOFSeen = false;
   try { input_stream.readChar(); input_stream.backup(1); }
   catch (java.io.IOException e1) {
      EOFSeen = true;
      error_after = curPos <= 1 ? "" : input_stream.GetImage();
      if (curChar == '\n' || curChar == '\r') {
         error_line++;
         error_column = 0;
      }
      else
         error_column++;
   }
   if (!EOFSeen) {
      input_stream.backup(1);
      error_after = curPos <= 1 ? "" : input_stream.GetImage();
   }
   throw new TokenMgrError(EOFSeen, curLexState, error_line, error_column, error_after, curChar, TokenMgrError.LEXICAL_ERROR);
  }
}

private void jjCheckNAdd(int state)
{
   if (jjrounds[state] != jjround)
   {
      jjstateSet[jjnewStateCnt++] = state;
      jjrounds[state] = jjround;
   }
}
private void jjAddStates(int start, int end)
{
   do {
      jjstateSet[jjnewStateCnt++] = jjnextStates[start];
   } while (start++ != end);
}
private void jjCheckNAddTwoStates(int state1, int state2)
{
   jjCheckNAdd(state1);
   jjCheckNAdd(state2);
}

private void jjCheckNAddStates(int start, int end)
{
   do {
      jjCheckNAdd(jjnextStates[start]);
   } while (start++ != end);
}

}
